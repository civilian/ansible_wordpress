#takes a backup of a wordpress install, to get it ready for deployment.
---
#initial setup
- name: make sure rsync is installed on the server.
  apt: pkg=rsync
  become: yes

#clear and recreate the backup directory
# - name: delete the old backup
#   local_action: file path=.backup state=absent
- name: create new backup dir
  local_action: file path=.backup state=directory

#backup mysql
- name: backup the wordpress mysql
  mysql_db: name={{ db_name }} login_user={{ wordpress_db_user }} login_password={{ wordpress_db_password }} login_host={{ db_host }} state=dump target="/tmp/wp-backup.sql"

# Review the compression vs the speed
# https://unix.stackexchange.com/questions/188737/does-compression-option-z-with-rsync-speed-up-backup
- name: fetch the backup
  synchronize:
    mode: pull
    src: /tmp/wp-backup.sql
    dest: .backup/wp-backup.sql

- name: clean up the sql backup
  file: path=/tmp/wp-backup.sql state=absent

#do a backup of all the files.
# - name: get the base files
#   synchronize:
#     mode: pull
#     src: /usr/share/wordpress/
#     dest: .backup/wordpress/
#   become: yes

- name: get the htaccess file
  fetch:
    mode: pull
    src: /etc/wordpress/htaccess 
    dest: .backup/etc/htaccess
    flat: yes
  become: yes

#backup upload if on
- include: ./includes/archive_uploads.yml
  when: archive_uploads