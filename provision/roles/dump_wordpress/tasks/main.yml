#takes a backup of a wordpress install, to get it ready for deployment.
---
#initial setup
- name: make sure rsync is installed on the server.
  apt: pkg=rsync
  sudo: true

#clear and recreate the backup directory
- name: delete the old backup
  local_action: file path=.backup state=absent
- name: create new backup dir
  local_action: file path=.backup state=directory

#backup mysql
- name: ensure 7z
  apt: pkg=p7zip-full
  sudo: yes
- name: backup the wordpress mysql
  mysql_db: name={{ db_name }} login_user={{ wordpress_db_user }} login_password={{ wordpress_db_password }} login_host={{ db_host }} state=dump target="/tmp/wp-backup.sql"
- name: compress the backup
  command: 7z a /tmp/wp-backup.7z /tmp/wp-backup.sql
- name: clean up the sql backup
  file: path=/tmp/wp-backup.sql state=absent
- name: fetch the backup
  local_action: command rsync -a {{backup_user}}@{{domain}}:/tmp/wp-backup.7z .backup/wp-backup.7z
- name: clean the 7z backup
  file: path=/tmp/wp-backup.7z state=absent

#do a backup of all the files.
- name: get the base files
  local_action: command rsync -a {{ backup_user }}@{{domain}}:/usr/share/wordpress/ .backup/wordpress/
- name: get the htaccess file
  local_action: command rsync -a --rsync-path="sudo rsync" {{ backup_user }}@{{domain}}:/etc/wordpress/htaccess .backup/etc/

#backup upload if on
- include: ./includes/archive_uploads.yml
  when: archive_uploads